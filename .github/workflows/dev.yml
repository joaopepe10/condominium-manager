name: Deploy no ambiente de desenvolvimento

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Fazendo configuracao do java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Fazendo build do projeto
        run: mvn clean install && ls
      - name: Package do projeto
        run: mvn package

      - name: Verifica se jar existe
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{secrets.HOST_EC2}}
          username: ec2-user
          key: ${{ secrets.SSH_JP_PC_EC2 }}
          port: 22
          script: |
              rm -rf /home/ec2-user/target 

      - name: Copiando JAR para EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{secrets.HOST_EC2}}
          username: ec2-user
          key: ${{ secrets.SSH_JP_PC_EC2 }}
          port: 22
          source: "./target/condominium-manager-0.0.1-SNAPSHOT.jar"
          target: "/home/ec2-user"

      - name: Parando instancia anteiror da API
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{secrets.HOST_EC2}}
          username: ec2-user
          key: ${{ secrets.PESSOA_KEY }}
          port: 22
          script: |
              PID=$(sudo lsof -ti :8080)
              if [ ! -z "$PID" ]; then
                sudo kill -9 $PID
              fi
      - name: Executando nova instancia da API
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{secrets.HOST_EC2}}
          username: ec2-user
          key: ${{ secrets.PESSOA_KEY }}
          port: 22
          script: |
              nohup java -jar target/pessoa-api-0.0.1-SNAPSHOT.jar > output.log 2>&1 &        